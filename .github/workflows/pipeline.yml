name: build postfix container
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Set up Docker Buildx
        id: Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      
      - name: Login to ghcr
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ghcr.io/kubernetes-mail-server/postfix
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    env:
      KUBECONFIG: ~/kube/kubeconfig
      NAME: postfix
      IMAGE: ghcr.io/kubernetes-mail-server/${NAME}
      NAMESPACE: mail-server
      REPLICAS: 1
      HELM: https://get.helm.sh/helm-v3.3.1-linux-amd64.tar.gz
      KUBECTL: https://storage.googleapis.com/kubernetes-release/release/v1.19.0/bin/linux/amd64/kubectl
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Cache Tools
        uses: actions/cache@v2
        with:
          path: $HOME/kube
          key: ${{ runner.os }}-build-kube-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-kube

      - name: Setup Tools
        run: |
          echo "$HOME/kube" >> ${GITHUB_PATH}
          curl -L ${KUBECTL} -o $HOME/kube/kubectl
          curl -L ${HELM} | tar xzO linux-amd64/helm > $HOME/kube/helm
          chmod +x ~/kube/helm $HOME/kube/kubectl

      - name: Setup Kubeconfig
        run: |
          echo $PATH
          echo $KUBECONFIG > $HOME/kube/kubeconfig
          cat $HOME/kube/kubeconfig

      - name: Scale down
        run: | 
          kubectl get pods -n ${NAMESPACE}
          kubectl scale --replicas=0 -n ${NAMESPACE} deployment/${NAME} || true
          kubectl get deployments -n ${NAMESPACE}

      - name: Install
        run: | 
          helm template \
            --set name=${NAME} \
            --set namespace=${NAMESPACE} \
            --set hostname=$(kubectl get cm -n ${NAMESPACE} services-info -o=jsonpath="{.data.HOSTNAME}") \
            --set haproxy_smtpd=$(kubectl get cm -n ${NAMESPACE} services-info -o=jsonpath="{.data.POSTFIX_PORT}") \
            --set plain_smtpd=$(kubectl get cm -n ${NAMESPACE} services-info -o=jsonpath="{.data.POSTFIX_SUBMISSION_PORT}") \
            --set repository=${IMAGE}@${{ steps.docker_build.outputs.digest }} \
            ${GITHUB_WORKSPACE}/kubernetes | kubectl apply -f -

      - name: Scale up
        run: | 
          kubectl scale --replicas=${REPLICAS} -n ${NAMESPACE} deployment/${NAME}
          kubectl get deployments -n ${NAMESPACE}

